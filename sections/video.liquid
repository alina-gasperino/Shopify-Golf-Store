{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign video_id = section.settings.video.id | default: section.settings.video_url.id
  assign video_alt = section.settings.video.alt | default: section.settings.description
  assign alt = 'sections.video.load_video' | t: description: video_alt | escape
-%}
<div class="gradient">
  <div class="video-section isolate{% unless section.settings.full_width %} page-width{% endunless %}">
    {%- if section.settings.title != blank or section.settings.subheading != blank -%}
      <div class="header--intro {{ section.settings.heading_alignment }}">
        <div class="header--head">
          <legend class="subheading special--base bold">{{ section.settings.subheading }}</legend>
          <h2 class="heading {{ section.settings.heading_size }}">{{ section.settings.title | escape }}</h2>
        </div>
      </div>
    {%- endif -%}
    <noscript>
      <div
        class="video-section__media"
        {% if section.settings.cover_image != blank %}
          style="padding-bottom: {{ 1 | divided_by: section.settings.cover_image.aspect_ratio | times: 100 }}%;"
        {% endif %}
      >
        <a
          href="{{ section.settings.video_url }}"
          class="video-section__poster media media--transparent media--landscape{% if section.settings.cover_image == blank %} video-section__placeholder{% endif %}"
        >
          {%- if section.settings.cover_image != blank -%}
            {%- capture sizes -%}
              {% if section.settings.full_width -%}
                100vw
              {%- else -%}
                (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px)
                calc(100vw - 10rem), 100vw
              {%- endif %}
            {%- endcapture -%}
            {%- assign alt = 'sections.video.load_video' | t: description: section.settings.description | escape -%}
            {{
              section.settings.cover_image
              | image_url: width: 3840
              | image_tag:
                loading: 'lazy',
                class: 'loading__animation',
                sizes: sizes,
                widths: '375, 750, 1100, 1500, 1780, 2000, 3000, 3840',
                alt: alt
            }}
          {%- else -%}
            {{ 'collection-2' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
          {%- endif -%}
        </a>
      </div>
    </noscript>
    <deferred-media
      class="video-section__media deferred-media no-js-hidden gradient global-media-settings{% if section.settings.full_width %} global-media-settings--full-width{% endif %}"
      data-media-id="{{ section.settings.video_url.id }}"
      style="padding-bottom: 56%;"
    >
      <button
        id="Deferred-Poster-Modal-{{ section.settings.video_url.id }}"
        class="video-section__poster media deferred-media__poster media--landscape"
        type="button"
        aria-label="{{ 'sections.video.load_video' | t: description: section.settings.description | escape }}"
      >
        {%- if section.settings.cover_image != blank -%}
          {%- capture sizes -%}
            {% if section.settings.full_width -%}
              100vw
            {%- else -%}
              (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px)
              calc(100vw - 10rem), 100vw
            {%- endif %}
          {%- endcapture -%}
          {%- assign alt = 'sections.video.load_video' | t: description: section.settings.description | escape -%}
          {{
            section.settings.cover_image
            | image_url: width: 3840
            | image_tag: loading: 'lazy', class: 'loading__animation', sizes: sizes, widths: '375, 750, 1100, 1500, 1780, 2000, 3000, 3840', alt: alt
          }}
        {%- else -%}
          {{ 'collection-2' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
        {%- endif -%}
        <span class="deferred-media__poster-button motion-reduce">
          {%- render 'theme-icons', icon: 'play' -%}
        </span>
      </button>
      <template>
        {%- if section.settings.video == null and section.settings.video_url != null -%}
          {%- liquid
            assign loop = ''
            if section.settings.enable_video_looping
              assign loop = '&loop=1&playlist=' | append: video_id
            endif
          -%}
          {%- if section.settings.video_url.type == 'youtube' -%}
            <iframe
              src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1{{ loop }}"
              class="js-youtube"
              allow="autoplay; encrypted-media"
              allowfullscreen
              title="{{ section.settings.description | escape }}"
            ></iframe>
          {%- else -%}
            <iframe
              src="https://player.vimeo.com/video/{{ video_id }}?autoplay=1{{ loop }}"
              class="js-vimeo"
              allow="autoplay; encrypted-media"
              allowfullscreen
              title="{{ section.settings.description | escape }}"
            ></iframe>
          {%- endif -%}
        {%- else -%}
          {{
            section.settings.video
            | video_tag:
              image_size: '1100x',
              autoplay: true,
              loop: section.settings.enable_video_looping,
              controls: true,
              muted: false
          }}
        {%- endif -%}
      </template>
    </deferred-media>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.video.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": [
      "header",
      "footer"
    ]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.layout.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.all.full_width.label",
      "default": false
    },
    {
      "type": "header",
      "content": "t:sections.all.section_header.content"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.all.subheading.label"
    },
    {
      "type": "text",
      "id": "title",
      "label": "t:sections.all.heading.label",
      "default": "Video"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h3",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h4",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "h5",
          "label": "t:sections.all.heading_size.options__4.label"
        }
      ],
      "default": "h3",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.text_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.text_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.all.heading_alignment.label"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header.content"
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:sections.video.settings.cover_image.label"
    },
    {
      "type": "video_url",
      "id": "video_url",
      "accept": [
        "youtube",
        "vimeo"
      ],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
      "label": "t:sections.video.settings.video_url.label",
      "placeholder": "t:sections.video.settings.video_url.placeholder",
      "info": "t:sections.video.settings.video_url.info"
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "label": "t:sections.video.settings.enable_video_autoplay.label"
    },
    {
      "type": "text",
      "id": "description",
      "label": "t:sections.video.settings.description.label",
      "info": "t:sections.video.settings.description.info"
    }
  ],
  "presets": [
    {
      "name": "t:sections.video.presets.name"
    }
  ]
}
{% endschema %}
